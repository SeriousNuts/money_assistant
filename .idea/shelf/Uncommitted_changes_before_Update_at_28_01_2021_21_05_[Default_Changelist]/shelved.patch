Index: app/src/main/java/com/example/myapplication/AfterContact.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myapplication;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.os.Bundle;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.ScrollView;\r\nimport android.widget.TextView;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class AfterContact extends AppCompatActivity {\r\nprivate RecyclerView choosenContactsList;\r\nprivate choosenContactsArapter ContAdapter;\r\nprivate int countOfContacts;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_after_contact);\r\n        choosenContactsList= findViewById(R.id.contactsRecycler);\r\n        LinearLayoutManager layoutManager= new LinearLayoutManager(this);\r\n        ArrayList<Contact> arrayFromContacts = (ArrayList) getIntent().getSerializableExtra(\"ChoosenContacts\");\r\n        if (arrayFromContacts!=null){\r\n            for (int j = 0; j < arrayFromContacts.size(); j++) {countOfContacts++;}\r\n        }\r\n        choosenContactsArapter choosenContactsArapter = new choosenContactsArapter(this,arrayFromContacts,countOfContacts);\r\n        choosenContactsList.setAdapter(choosenContactsArapter);\r\n        choosenContactsList.setLayoutManager(layoutManager);\r\n\r\n\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/myapplication/AfterContact.java	(revision f616c8175fc5184a447f91137adcc5268734166f)
+++ app/src/main/java/com/example/myapplication/AfterContact.java	(date 1611325262001)
@@ -22,13 +22,14 @@
         setContentView(R.layout.activity_after_contact);
         choosenContactsList= findViewById(R.id.contactsRecycler);
         LinearLayoutManager layoutManager= new LinearLayoutManager(this);
+        choosenContactsList.setLayoutManager(layoutManager);
         ArrayList<Contact> arrayFromContacts = (ArrayList) getIntent().getSerializableExtra("ChoosenContacts");
         if (arrayFromContacts!=null){
             for (int j = 0; j < arrayFromContacts.size(); j++) {countOfContacts++;}
         }
         choosenContactsArapter choosenContactsArapter = new choosenContactsArapter(this,arrayFromContacts,countOfContacts);
         choosenContactsList.setAdapter(choosenContactsArapter);
-        choosenContactsList.setLayoutManager(layoutManager);
+
 
 
 
Index: .idea/shelf/Uncommitted_changes_before_Update_at_19_01_2021_21_23__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_19_01_2021_21_23__Default_Changelist_.xml	(revision f616c8175fc5184a447f91137adcc5268734166f)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_19_01_2021_21_23__Default_Changelist_.xml	(revision f616c8175fc5184a447f91137adcc5268734166f)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_19_01_2021_21_23_[Default_Changelist]" date="1611066223996" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_19_01_2021_21_23_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 19.01.2021 21:23 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_19_01_2021_21_23_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_19_01_2021_21_23_[Default_Changelist]/shelved.patch	(revision f616c8175fc5184a447f91137adcc5268734166f)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_19_01_2021_21_23_[Default_Changelist]/shelved.patch	(revision f616c8175fc5184a447f91137adcc5268734166f)
@@ -1,36 +0,0 @@
-Index: app/src/main/java/com/example/myapplication/AddUsers.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.myapplication;\r\n\r\nimport android.Manifest;\r\nimport android.app.Activity;\r\nimport android.app.PendingIntent;\r\nimport android.content.BroadcastReceiver;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.IntentFilter;\r\nimport android.content.pm.PackageManager;\r\nimport android.os.Bundle;\r\nimport android.telephony.SmsManager;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.CheckBox;\r\nimport android.widget.EditText;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.zxing.integration.android.IntentIntegrator;\r\nimport com.google.zxing.integration.android.IntentResult;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\nimport static android.text.InputType.TYPE_CLASS_NUMBER;\r\nimport static android.text.InputType.TYPE_TEXT_VARIATION_PERSON_NAME;\r\nimport static android.text.InputType.TYPE_TEXT_VARIATION_PHONETIC;\r\nimport static android.view.Gravity.RELATIVE_LAYOUT_DIRECTION;\r\nimport static android.view.Gravity.RIGHT;\r\nimport static com.example.myapplication.R.id.ChartName;\r\nimport static com.example.myapplication.R.id.EnterName;\r\nimport static com.example.myapplication.R.id.bottom_menu;\r\nimport static com.example.myapplication.R.id.nav_add;\r\nimport static com.example.myapplication.R.id.nav_contacts;\r\nimport static com.example.myapplication.R.id.nav_exit;\r\nimport static com.example.myapplication.R.id.nav_progress;\r\nimport static com.example.myapplication.R.id.nav_qr;\r\nimport static com.example.myapplication.R.id.percent;\r\n\r\n\r\npublic class AddUsers extends Fragment {\r\n\r\n\r\n    ArrayList<String> NumbersofNameEditText = new ArrayList<>();\r\n    ArrayList<String> EditTexts = new ArrayList<>();\r\n    ArrayList<String> NumbersofSummEditText = new ArrayList<>();\r\n    ArrayList<String> EditTexts2 = new ArrayList<>();\r\n    ArrayList<String> NumbersofPhonesEditText = new ArrayList<>();\r\n    ArrayList<String> EditTexts3 = new ArrayList<>();\r\n    int i = 0;\r\n    int d = 0;\r\n    int x = 50;\r\n    int f = 1000;\r\n    int g = 0;\r\n    int buttonId;\r\n    FirebaseUser payment;\r\n    FirebaseFirestore firebaseFirestore = FirebaseFirestore.getInstance();\r\n    CheckBox notifyALL;\r\n    String SENT_SMS = \"SENT_SMS\";\r\n    String DELIVER_SMS = \"DELIVER_SMS\";\r\n    Intent sent_intent = new Intent(SENT_SMS);\r\n    Intent deliver_intent = new Intent(DELIVER_SMS);\r\n    PendingIntent sent_pi, deliver_pi;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        // sent_pi= PendingIntent.getBroadcast(getActivity(),0,sent_intent,0);\r\n        //deliver_pi= PendingIntent.getBroadcast(getActivity(),0,deliver_intent,0);\r\n\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        final View RootView = inflater.inflate(R.layout.fragment_add_users, container, false);\r\n        ActivityCompat.requestPermissions(getActivity(), new String[]{Manifest.permission.SEND_SMS}, 1);\r\n        notifyALL = (CheckBox) RootView.findViewById(R.id.notifyAll);\r\n        Button EnterBut = RootView.findViewById(EnterName);\r\n        BottomNavigationView bottomMenu = RootView.findViewById(bottom_menu);\r\n        bottomMenu.setOnNavigationItemSelectedListener(navListener);\r\n        sent_pi = PendingIntent.getBroadcast(getActivity(), 0, sent_intent, 0);\r\n        deliver_pi = PendingIntent.getBroadcast(getActivity(), 0, deliver_intent, 0);\r\n        EnterBut.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                final EditText chartName = RootView.findViewById(R.id.ChartName);\r\n                Intent intent1 = new Intent(getActivity(), MainWindow.class);\r\n                Bundle Name = new Bundle();\r\n                //имя диаграммы\r\n                //пользователи\r\n                for (int z = 0; z < NumbersofNameEditText.size(); z++) {\r\n                    EditText ed2 = getView().findViewById(Integer.parseInt(NumbersofNameEditText.get(z)));\r\n                    EditTexts2.add(ed2.getText().toString());\r\n                }\r\n\r\n                intent1.putExtra(\"users\", EditTexts2);\r\n                //значения\r\n                for (int i = 0; i < NumbersofSummEditText.size(); i++) {\r\n                    EditText ed = getView().findViewById(Integer.parseInt(NumbersofSummEditText.get(i)));\r\n                    if (!ed.getText().toString().equals(\"\")) {\r\n                        EditTexts.add(ed.getText().toString());\r\n                    } else {\r\n                        // Toast.makeText(ChartGenerator.this, \"сумма не может быть пустой\", Toast.LENGTH_SHORT).show();\r\n\r\n                    }\r\n\r\n                }\r\n                intent1.putExtra(\"list\", EditTexts);\r\n                payment = FirebaseAuth.getInstance().getCurrentUser();\r\n                String PaymentKey = payment.getUid();\r\n                EditText chartname = RootView.findViewById(ChartName);\r\n                if (!chartname.equals(\"\")) {\r\n                    String Chartname = chartname.getText().toString();\r\n                    Date currentTime = Calendar.getInstance().getTime();\r\n                    EditText EditText;\r\n                    Chart chart = new Chart(Chartname, \"\", Integer.toString(NumbersofNameEditText.size()), \"0\", \"Chart\");\r\n                    int fullAmount = 0;\r\n                    Map<String, Object> paymentsMap = new HashMap<>();\r\n                    paymentsMap.put(\"Chart\", chart);\r\n                    String date = currentTime.toString();\r\n                    for (int j = 0; j < NumbersofSummEditText.size(); j++) {\r\n                        EditText = RootView.findViewById(Integer.parseInt(NumbersofSummEditText.get(j)));\r\n                        String amount = EditText.getText().toString();\r\n                        fullAmount = fullAmount + Integer.parseInt(amount);\r\n                    }\r\n                    for (int i = 0; i < NumbersofNameEditText.size(); i++) {\r\n                        EditText = RootView.findViewById(Integer.parseInt(NumbersofNameEditText.get(i)));\r\n                        String name = EditText.getText().toString();\r\n                        EditText = RootView.findViewById(Integer.parseInt(NumbersofSummEditText.get(i)));\r\n                        String amount = EditText.getText().toString();\r\n                        String id = Integer.toString(i);\r\n                        int percentPayment = (Integer.parseInt(amount) * 100 / fullAmount);\r\n                        Payment paymentCh = new Payment(Chartname, id, name, date, Integer.parseInt(amount), percentPayment);\r\n\r\n\r\n                        firebaseFirestore.collection(PaymentKey).add(paymentCh);\r\n                        Toast.makeText(getActivity(), \"Добавлено\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                    firebaseFirestore.collection(PaymentKey).document(Chartname).set(chart);\r\n                } else {\r\n                    Toast.makeText(getActivity(), \"Введите имя дигарммы\", Toast.LENGTH_SHORT).show();\r\n                }\r\n                if (notifyALL.isChecked()) {\r\n                    SmsManager smsManager = SmsManager.getDefault();\r\n                    for (int h = 0; h < NumbersofPhonesEditText.size(); h++) {\r\n                        EditText ed3 = RootView.findViewById(Integer.parseInt(NumbersofPhonesEditText.get(h)));\r\n                        if (!ed3.getText().toString().equals(\"\")) {\r\n                            EditTexts3.add(ed3.getText().toString());\r\n                        }\r\n\r\n                        EditText ed2 = RootView.findViewById(Integer.parseInt(NumbersofNameEditText.get(h)));\r\n                        EditText ed = RootView.findViewById(Integer.parseInt(NumbersofSummEditText.get(h)));\r\n                        smsManager.sendTextMessage(String.valueOf(EditTexts3), chartName.getText().toString(), ed2.getText().toString() + \",вы должны мне -\" + ed.getText().toString() + \" рублей.\", sent_pi, deliver_pi);\r\n                        EditTexts3.clear();\r\n                        Name.putString(\"Chart Name\", chartName.getText().toString());\r\n                        intent1.putExtras(Name);\r\n                    }\r\n                }\r\n\r\n\r\n                startActivity(intent1);\r\n                EditTexts.clear();\r\n                EditTexts2.clear();\r\n\r\n            }\r\n        });\r\n        return RootView;\r\n    }\r\n\r\n    @Override\r\n    public void onResume() {\r\n\r\n        super.onResume();\r\n\r\n        requireActivity().registerReceiver(sentReceiver, new IntentFilter(SENT_SMS));\r\n\r\n        requireActivity().registerReceiver(deliverReceiver, new IntentFilter(DELIVER_SMS));\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onStop() {\r\n\r\n        super.onStop();\r\n\r\n        requireActivity().unregisterReceiver(sentReceiver);\r\n\r\n        requireActivity().unregisterReceiver(deliverReceiver);\r\n\r\n    }\r\n\r\n    BroadcastReceiver sentReceiver = new BroadcastReceiver() {\r\n\r\n        @Override\r\n\r\n        public void onReceive(Context context, Intent intent) {\r\n            switch (getResultCode()) {\r\n                case Activity.RESULT_OK:\r\n                    Toast.makeText(context, \"Sented\", Toast.LENGTH_LONG).show();\r\n                    break;\r\n                default:\r\n                    Toast.makeText(context, \"Error S\", Toast.LENGTH_LONG).show();\r\n                    break;\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n\r\n    BroadcastReceiver deliverReceiver = new BroadcastReceiver() {\r\n\r\n        @Override\r\n\r\n        public void onReceive(Context context, Intent intent) {\r\n            switch (getResultCode()) {\r\n                case Activity.RESULT_OK:\r\n                    Toast.makeText(context, \"Delivered\", Toast.LENGTH_LONG).show();\r\n                    break;\r\n                default:\r\n                    Toast.makeText(context, \"Error D\", Toast.LENGTH_LONG).show();\r\n                    break;\r\n            }\r\n        }\r\n\r\n    };\r\n    private BottomNavigationView.OnNavigationItemSelectedListener navListener = new BottomNavigationView.OnNavigationItemSelectedListener() {\r\n        @Override\r\n        public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n            switch (item.getItemId()) {\r\n                case nav_contacts:\r\n                    int permissionStatus = ContextCompat.checkSelfPermission(getActivity(), Manifest.permission.READ_CONTACTS);\r\n                    if(permissionStatus == PackageManager.PERMISSION_GRANTED) {\r\n                        Intent contactIntent = new Intent(getActivity(), ContactsList.class);\r\n                        startActivity(contactIntent);\r\n                    }\r\n                    else {\r\n                        ActivityCompat.requestPermissions(getActivity(), new String[] {Manifest.permission.READ_CONTACTS,\r\n                                Manifest.permission.WRITE_CONTACTS},\r\n                                1);\r\n                    }\r\n                    break;\r\n                case nav_exit:\r\n                    FirebaseAuth.getInstance().signOut();\r\n                    Intent intentLogout = new Intent(getActivity(), MainActivity.class);\r\n                    Toast.makeText(getActivity(),\"exit\", Toast.LENGTH_SHORT).show();\r\n                    startActivity(intentLogout);\r\n                    getActivity().finish();\r\n                    break;\r\n                case nav_qr:\r\n                    scanCode();\r\n                    break;\r\n                case nav_progress:\r\n                    Intent progresIntent = new Intent(getActivity(), ChartProgressActivity.class);\r\n                    startActivity(progresIntent);\r\n                    break;\r\n                case nav_add:\r\n                    final LinearLayout llMain2 = getView().findViewById(R.id.llMain2);\r\n                    i++;\r\n                    LinearLayout.LayoutParams param = new LinearLayout.LayoutParams(LinearLayout.LayoutParams.FILL_PARENT,\r\n                            LinearLayout.LayoutParams.WRAP_CONTENT);\r\n                    param.gravity = RELATIVE_LAYOUT_DIRECTION;\r\n                    final EditText editText = new EditText(getActivity());\r\n                    editText.setId(i);\r\n                    NumbersofSummEditText.add(Integer.toString(i));\r\n                    editText.setHint(\"Сумма\");\r\n                    //запись id едиттекстов\r\n                    editText.setInputType(TYPE_CLASS_NUMBER);\r\n\r\n\r\n                    d = d + x;\r\n                    final LinearLayout.LayoutParams param2 = new LinearLayout.LayoutParams(LinearLayout.LayoutParams.FILL_PARENT,\r\n                            LinearLayout.LayoutParams.WRAP_CONTENT);\r\n                    param2.gravity = RIGHT;\r\n                    final EditText Users = new EditText(getActivity());\r\n                    Users.setId(d);\r\n                    NumbersofNameEditText.add(Integer.toString(d));\r\n                    Users.setHint(\"Имя\");\r\n                    Users.setInputType(TYPE_TEXT_VARIATION_PERSON_NAME);\r\n                    buttonId++;\r\n\r\n                    g = g + f;\r\n                    final LinearLayout.LayoutParams param3 = new LinearLayout.LayoutParams(LinearLayout.LayoutParams.FILL_PARENT,\r\n                            LinearLayout.LayoutParams.WRAP_CONTENT);\r\n                    param3.gravity = RIGHT;\r\n                    final EditText Phones = new EditText(getActivity());\r\n                    Phones.setId(g);\r\n                    Phones.setHint(\"Номер телефона\");\r\n                    Phones.setInputType(TYPE_TEXT_VARIATION_PHONETIC);\r\n                    NumbersofPhonesEditText.add(Integer.toString(g));\r\n\r\n                    final Button deleteField = new Button(getActivity());\r\n                    deleteField.setId(buttonId);\r\n                    deleteField.setText(\"Удалить\");\r\n                    llMain2.addView(Users, param2);\r\n                    llMain2.addView(editText, param);\r\n                    llMain2.addView(Phones, param3);\r\n                    llMain2.addView(deleteField);\r\n\r\n                    deleteField.setOnClickListener(new View.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(View v) {\r\n                            NumbersofNameEditText.remove(Integer.toString(Users.getId()));\r\n                            NumbersofSummEditText.remove(Integer.toString(editText.getId()));\r\n                            NumbersofPhonesEditText.remove(Integer.toString(Phones.getId()));\r\n                            llMain2.removeView(Users);\r\n                            llMain2.removeView(editText);\r\n                            llMain2.removeView(Phones);\r\n                            llMain2.removeView(deleteField);\r\n                        }\r\n\r\n                    });\r\n                    break;\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n\r\n    private void scanCode() {\r\n        IntentIntegrator integrator = new IntentIntegrator(getActivity());\r\n        integrator.setCaptureActivity(QRScanner.class);\r\n        integrator.setOrientationLocked(false);\r\n        integrator.setDesiredBarcodeFormats(IntentIntegrator.ALL_CODE_TYPES);\r\n        integrator.setPrompt(\"Scanning code\");\r\n        integrator.initiateScan();\r\n    }\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        IntentResult result = IntentIntegrator.parseActivityResult(requestCode, resultCode, data);\r\n        if (result != null) {\r\n            if (result.getContents() != null) {\r\n                AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\r\n                builder.setMessage(result.getContents());\r\n                builder.setTitle(\"Результат сканирования\");\r\n                builder.setPositiveButton(\"Отсканировать ещё\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        scanCode();\r\n                    }\r\n                }).setNegativeButton(\"Закончить\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        getActivity().finish();\r\n                    }\r\n                });\r\n                AlertDialog dialog = builder.create();\r\n                dialog.show();\r\n            } else {\r\n                Toast.makeText(getActivity(), \"Ничего не отсканировано\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        } else {\r\n            super.onActivityResult(requestCode, resultCode, data);\r\n        }\r\n    }\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/myapplication/AddUsers.java	(revision 138439eceea82aeb235a060c1966b744f22127f3)
-+++ app/src/main/java/com/example/myapplication/AddUsers.java	(date 1611052684407)
-@@ -71,6 +71,7 @@
-     ArrayList<String> EditTexts2 = new ArrayList<>();
-     ArrayList<String> NumbersofPhonesEditText = new ArrayList<>();
-     ArrayList<String> EditTexts3 = new ArrayList<>();
-+    //id Рзаных динамических элементов
-     int i = 0;
-     int d = 0;
-     int x = 50;
-@@ -89,9 +90,6 @@
-     @Override
-     public void onCreate(Bundle savedInstanceState) {
-         super.onCreate(savedInstanceState);
--        // sent_pi= PendingIntent.getBroadcast(getActivity(),0,sent_intent,0);
--        //deliver_pi= PendingIntent.getBroadcast(getActivity(),0,deliver_intent,0);
--
-     }
- 
-     @Override
-@@ -99,7 +97,7 @@
-                              Bundle savedInstanceState) {
-         final View RootView = inflater.inflate(R.layout.fragment_add_users, container, false);
-         ActivityCompat.requestPermissions(getActivity(), new String[]{Manifest.permission.SEND_SMS}, 1);
--        notifyALL = (CheckBox) RootView.findViewById(R.id.notifyAll);
-+        notifyALL =  RootView.findViewById(R.id.notifyAll);
-         Button EnterBut = RootView.findViewById(EnterName);
-         BottomNavigationView bottomMenu = RootView.findViewById(bottom_menu);
-         bottomMenu.setOnNavigationItemSelectedListener(navListener);
